call plug#begin(stdpath('data') . '/plugged')
Plug 'justinmk/vim-sneak'
call plug#end()

" https://www.reddit.com/r/vim/comments/6945lw/i_windows_linux_and_mac_my_vimrc_is_littered_with/
if !exists('g:os')
    if has('win64') || has('win32') || has('win16')
        let g:os = 'Windows'
    else
        let g:os = substitute(system('uname'), '\n', '', '')
    endif
endif


let mapleader = ','

nmap <C-J> <C-W>j
nmap <C-K> <C-W>k
nmap <C-L> <C-W>l
nmap <C-H> <C-W>h

nnoremap ]g <Cmd>call VSCodeNotify('editor.action.marker.next')<CR>
nnoremap [g <Cmd>call VSCodeNotify('editor.action.marker.prev')<CR>

nnoremap <leader>qf <Cmd>call VSCodeNotify('editor.action.quickFix')<CR>
nnoremap <leader>gd <Cmd>call VSCodeNotify('editor.action.revealDefinition')<CR>
nnoremap <leader>gr <Cmd>call VSCodeNotify('editor.action.goToReferences')<CR>

" nnoremap <leader>re <Cmd>call VSCodeNotify('remote-wsl.revealInExplorer')<CR>
nnoremap <leader>re <Cmd>call VSCodeNotify('revealInExplorer')<CR>
nnoremap <leader>rn <Cmd>call VSCodeNotify('editor.action.rename')<CR>
nnoremap <leader>oi <Cmd>call VSCodeNotify('editor.action.organizeImports')<CR>
nnoremap <leader>gb <Cmd>call VSCodeNotify('gitlens.toggleFileBlame')<CR>

nnoremap ,qf <Cmd>call VSCodeNotify('keyboard-quickfix.openQuickFix')<CR>

" Support clipboard in WSL2
" References:
" [1] https://github.com/asvetliakov/vscode-neovim/issues/103
" [2] https://github.com/Microsoft/WSL/issues/892
if g:os == 'Linux' && (has('clipboard') || exists('g:vscode')) " [1]
    let s:clip = '/mnt/c/Windows/System32/clip.exe'  " change this path according to your mount point [2]
    if executable(s:clip)
        augroup WSLYank
            autocmd!
            autocmd TextYankPost * if v:event.operator ==# 'y' | call system(s:clip, @0) | endif
        augroup END
    endif
endif

" Correct scrolling for MacOs
if g:os == 'Darwin'
    nnoremap <silent> <expr> <C-f> VSCodeExtensionCall('scroll', 'page', 'down')
    xnoremap <silent> <expr> <C-f> VSCodeExtensionCall('scroll', 'page', 'down')
    nnoremap <silent> <expr> <C-b> VSCodeExtensionCall('scroll', 'page', 'up')
    xnoremap <silent> <expr> <C-b> VSCodeExtensionCall('scroll', 'page', 'up')

    nnoremap <silent> <expr> <C-e> VSCodeExtensionNotify('scroll-line', 'down')
    xnoremap <silent> <expr> <C-e> VSCodeExtensionNotify('scroll-line', 'down')
    nnoremap <silent> <expr> <C-y> VSCodeExtensionNotify('scroll-line', 'up')
    xnoremap <silent> <expr> <C-y> VSCodeExtensionNotify('scroll-line', 'up')

    nnoremap <silent> <expr> <C-d> VSCodeExtensionCall('scroll', 'halfPage', 'down')
    xnoremap <silent> <expr> <C-d> VSCodeExtensionCall('scroll', 'halfPage', 'down')
    nnoremap <silent> <expr> <C-u> VSCodeExtensionCall('scroll', 'halfPage', 'up')
    xnoremap <silent> <expr> <C-u> VSCodeExtensionCall('scroll', 'halfPage', 'up')
endif
